#pragma once
#include"基本定义/迷你.hpp"
#include"基本定义/模板元.hpp"
#include"组件/大小根堆.hpp"

枚举体 排序方式{
    升序,
    降序,
};

符号常量 排序方式 升序 = 排序方式::升序;
符号常量 排序方式 降序 = 排序方式::降序;

模板<类 序列类型>
空 堆排序(序列类型 常量 & 序列, 自然数 长度, 排序方式 模式 = 升序) {
    若 (长度 < 2) {
        回递;
    }
    定义 纯元素<解析类型(序列[0])> 元素;
    比较回调<元素> 回调 = 模式 == 升序 ? 
        比较回调<元素>(默认比较<元素, 否>()) : 
        比较回调<元素>(默认比较<元素>());
    序列类型 &     列表 = (序列类型 &)序列;

    循环(自然数 下标 = 1; 下标 < 长度; 下标++) {
        大小根堆空间::添加(列表, 下标, 列表[下标], 回调);
    }
    循环(自然数 下标 = 长度; --下标 > 0; ) {
        列表[下标] = 大小根堆空间::取出(列表, 下标 + 1, 列表[下标], 回调);
    }
}

模板<类 序列类型>
空 堆排序(序列类型 常量 & 序列, 排序方式 模式 = 升序) {
    堆排序(序列, 序列->长度, 模式);
}

