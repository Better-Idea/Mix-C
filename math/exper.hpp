#ifndef xpack_math_expe
#define xpack_math_expe
#pragma push_macro("xuser")
#undef  xuser
#define xuser mixc::math_expe::inc
#include"define/base_type.hpp"
#include"define/inf.hpp"
#include"macro/xexport.hpp"
#pragma pop_macro("xuser")

namespace mixc::math_expe{
    constexpr uxx mask_low           = 32 - 1;
    constexpr uxx shift              = 5;
    constexpr f64 lut_ee0_een31   [] = {1.000000000000000000e+00, 3.678794411714423412e-01, 1.353352832366127063e-01, 4.978706836786395092e-02, 1.831563888873418419e-02, 6.737946999085468888e-03, 2.478752176666359214e-03, 9.118819655545165475e-04, 3.354626279025119815e-04, 1.234098040866796086e-04, 4.539992976248487568e-05, 1.670170079024566908e-05, 6.144212353328213680e-06, 2.260329406981055889e-06, 8.315287191035685032e-07, 3.059023205018260324e-07, 1.125351747192592103e-07, 4.139937718785170402e-08, 1.522997974471264301e-08, 5.602796437537273201e-09, 2.061153622438560020e-09, 7.582560427911915196e-10, 2.789468092868928072e-10, 1.026187963170190286e-10, 3.775134544279102570e-11, 1.388794386496403906e-11, 5.109089028063331784e-12, 1.879528816539085994e-12, 6.914400106940213306e-13, 2.543665647376926833e-13, 9.357622968840189535e-14, 3.442477108469982134e-14, };
    constexpr f64 lut_een32_een704[] = {1.000000000000000000e+00, 1.266416554909419728e-14, 1.603810890548643312e-28, 2.031092662734821295e-42, 2.572209372642432337e-56, 3.257488532207548981e-70, 4.125337404615226527e-84, 5.224395583791782093e-98, 6.616261056709575339e-112, 8.378942533819497308e-126, 1.061123153746369187e-139, 1.343823928702095386e-153, 1.701840870191749322e-167, 2.155239451832284156e-181, 2.729430921594307562e-195, 3.456596504588705494e-209, 4.377491037053170650e-223, 5.543727118291739396e-237, 7.020667798504949778e-251, 8.891089926546138647e-265, 1.125982347416640661e-278, 1.425962685304203427e-292, 1.805862751352334343e-306, };
}

namespace mixc::math_expe::origin{
    inline f64 exper_unsafe(uxx x){
        return lut_ee0_een31[x & mask_low] * lut_een32_een704[x >> shift];
    }

    inline f64 exper(uxx x){
        if (x >= sizeof(lut_ee0_een31) / sizeof(lut_ee0_een31[0]) * sizeof(lut_een32_een704) / sizeof(lut_een32_een704[0])){
            return inc::inf_pos;
        }
        return exper_unsafe(x);
    }
}

#endif

xexport_space(mixc::math_expe::origin)