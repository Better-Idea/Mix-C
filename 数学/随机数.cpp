#include"数学/随机数.h"
#include"指令集/基础.h"

命名空间{
    U64 循环回归(U64 X) {
        X = 指令集::循环左移(X, X & 0x3f);
        X += X >> 32;
        回递 X;
    }
}
命名空间 随机数空间{
    模板<> 数据<哑元结构>::数据() {
        X = 指令集::时间戳();
    }
    模板<> 运算<哑元结构>::运算重载 U64() {
        回递 $D.X = 循环回归($D.X);
    }
    模板<> 运算<哑元结构>::运算重载 U32() {
        回递 U32($D.X = 循环回归($D.X));
    }
    模板<> 运算<哑元结构>::运算重载 F32() {
        回递 1.0f / 运算重载 U64();
    }
    模板<> 运算<哑元结构>::运算重载 F64() {
        回递 1.0 / 运算重载 U64();
    }
}