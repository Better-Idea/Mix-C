<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>extensibility-template-class</Title>
			<Shortcut>etclass</Shortcut>
			<Description>使用包含范式的可扩模板展部分类</Description>
			<Author>MixC</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
				<SnippetType>SurroundsWith</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Declarations>
				<Literal>
					<ID>path</ID>
					<ToolTip>文件路径</ToolTip>
					<Default>path</Default>
				</Literal>
                <Literal>
                    <ID>name</ID>
                    <ToolTip>类名</ToolTip>
                    <Default>name</Default>
                </Literal>
                <Literal>
                    <ID>tmpl_define</ID>
                    <ToolTip>模板定义</ToolTip>
                    <Default>tmpl_define</Default>
                </Literal>
                <Literal>
                    <ID>tmpl_args</ID>
                    <ToolTip>模板参数列表</ToolTip>
                    <Default>tmpl_args</Default>
                </Literal>
			</Declarations>
			<Code Language="cpp">
                    <![CDATA[#ifndef xpack_$path$_$name$
					#define xpack_$path$_$name$
						#pragma push_macro("xuser")
							#undef  xuser
							#define xuser mixc::$path$_$name$
							#include"define/base_type.hpp"
							#include"macro/xgc.hpp"
						#pragma pop_macro("xuser")
				
					namespace mixc::$path$_$name${
						template<$tmpl_define$>
						struct $name$_t{
							xgc_fields(
								xiam($name$_t<$tmpl_args$>)
							)
						};
                        
                        template<class final, $tmpl_define$>
                        struct $name$ : $name$_t<$tmpl_args$>{
							using the_t = $name$_t<$tmpl_args$>;
                            using the_t::the_t;
                        };
					}
				#endif
                
                #define xusing_$path$_$name$  ::mixc::$path$_$name$
                
                // final class
                #ifdef xuser
					#ifndef xusing_$path$_$name$
						#include"$path$/private/$name$.hpp"
                    #endif
					
                    namespace xuser::inc{
                        template<$tmpl_define$>
                        struct $name$ : xusing_$path$_$name$::$name$<$name$<$tmpl_args$>, $tmpl_args$>{
							using the_t = xusing_$path$_$name$::$name$<$name$<$tmpl_args$>, $tmpl_args$>;
                            using the_t::the_t;
                        };
					}
				#endif
				]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>
