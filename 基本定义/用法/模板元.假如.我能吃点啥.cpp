#include"基本定义/模板元.hpp"

模板<U32 种子>
结构体 HASH{
    静态 符号常量 U32 校验(U32 种子) {
        U32 置位位个数 = 0;
        U32 值 = 种子;
        只要(值 != 0) {
            置位位个数 += 值 & 1;
            值 /= 2;
        }
        回递 置位位个数;
    }
    静态 符号常量 布尔 检查(U32 种子){
        符号常量 布尔 合格 = 是;
        U32 总位数 = 比特数(U32);
        U32 置位位个数 = 校验(种子);
        U32 复位位个数 = 总位数 - 置位位个数;
        若 (复位位个数 / 置位位个数 > 4 || 置位位个数 / 复位位个数 > 4) {
            回递 ! 合格;
        }
        回递 合格;
    }
    静态断言(检查(种子), "笨蛋，用这个种子是非法的！");
    静态 符号常量 U32 值 = (种子 >> 24) + (种子 >> 16) + (种子 >> 8) + 种子 + 校验(种子);
};

枚举 适合清单 {
    吃翔,
    吃粑粑,
    吃米田共,
    吃狗粮,
    吃香的喝辣的,
};

主函数() {
    符号常量 U32 种子 = 99999999;
    符号常量 U32 啥   = HASH<种子>::值 % 吃香的喝辣的; //：）
    符号常量 适合清单 我适合 = 从<适合清单>::
        模板 值<吃翔, 吃粑粑, 吃米田共, 吃狗粮, 吃香的喝辣的>::
        模板 选择<啥>::作为结果;
    回递 0;
}
