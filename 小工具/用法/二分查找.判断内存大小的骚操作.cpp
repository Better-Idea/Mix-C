#include"基本定义/迷你.hpp"
#include"输入输出/控制台.hpp"
#include"小工具/二分查找.hpp"

符号常量 U08 无效内存 = 0xff;
符号常量 U08 写脏值 = 0x12;

结构体 M08{
    M08(U08 * 指针) : 指针(指针){}
    运算重载 U08(){
        若 (指针){
            回递 指针[0];
        }
        回递 无效内存;
    }
    空 运算重载=(U08 值){
        若 (指针){
            指针[0] = 值;
        }
    }
私有
    U08 * 指针;
};

模板<自然数 字节数>
结构体 内存模拟器{
    M08 运算重载[](自然数 下标){
        回递 M08(下标 >= 字节数 ? 空值 : 内存 + 下标);
    }
私有
    U08 内存[字节数];
};

内存模拟器<1000 * 1000> 内存;

主函数() {
    //假设最大有1PB内存
    //注意:请将此代码编译成64bit程序
    M08 哑元(空值);
    U64 字节数 = 二分查找(内存, 1024ULL * 1024 * 1024 * 1024 * 1024, 哑元)->向下匹配($C(M08) {
        M08 & 当前 = (M08 &)左; //我们并不理会常量修饰符
        M08   备份 = 当前;
        当前       = 写脏值;    //[左]为被比对值 [右]为比对值
        若 (当前 != 写脏值){
            回递 1;
        }
        非{
            当前   = 备份;
            回递 -1;
        }
    });
    回递 0;
}


