#include"基本定义/迷你.hpp"
#include"输入输出/控制台.hpp"
#include"小工具/绑定位.hpp"
#include"小工具/字符串化.hpp"

枚举体 电平{
    L,
    H,
};

符号常量 电平 L = 电平::L;
符号常量 电平 H = 电平::H;

定义 绑定位<U16, 电平> 二值位;

主函数() {
    原始串 状态[] = {
        _"L",
        _"H",
    };
    文字   缓冲区[64];
    U16    BITS = 0;
    二值位 A   (BITS, 0); //A绑定BITS的第0位
    二值位 B   (BITS, 1); //B绑定BITS的第1位
    二值位 NA  (BITS, 2); //以下以此类推
    二值位 NB  (BITS, 3);
    二值位 AND (BITS, 4);
    二值位 NAND(BITS, 5);
    二值位 OR  (BITS, 6);
    二值位 NOR (BITS, 7);
    二值位 XOR (BITS, 8);
    二值位 NXOR(BITS, 9);

    //A和B各有两个状态
    //让BITS的低2位由0递增至3
    循环(自然数 I = 0; I < 2 * 2; I++, BITS += 1) {
        NA   = !A;
        NB   = !B;
        AND  = A & B;
        NAND = !(A & B);
        OR   = A | B;
        NOR  = !(A | B);
        XOR  = (A & !B) | (!A & B);
        NXOR = !((A & !B) | (!A & B));
        字符串化(缓冲区, BITS, 2 /*bin*/);
        终端->打印(_"BITS     : "); 终端->打印一行(缓冲区);
        终端->打印(_"0 - A    : "); 终端->打印一行(状态[A   ]);
        终端->打印(_"1 - B    : "); 终端->打印一行(状态[B   ]);
        终端->打印(_"2 - NA   : "); 终端->打印一行(状态[NA  ]);
        终端->打印(_"3 - NB   : "); 终端->打印一行(状态[NB  ]);
        终端->打印(_"4 - AND  : "); 终端->打印一行(状态[AND ]);
        终端->打印(_"5 - NAND : "); 终端->打印一行(状态[NAND]);
        终端->打印(_"6 - OR   : "); 终端->打印一行(状态[OR  ]);
        终端->打印(_"7 - NOR  : "); 终端->打印一行(状态[NOR ]);
        终端->打印(_"8 - XOR  : "); 终端->打印一行(状态[XOR ]);
        终端->打印(_"9 - NXOR : "); 终端->打印一行(状态[NXOR]);
        终端->打印一行();
    }

    回递 0;
}
